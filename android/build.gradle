group = "com.example.lut_transformer"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "2.1.0"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.7.3")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

def media3Version = "1.7.1"

android {
    namespace = "com.example.lut_transformer"

    compileSdk = 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 24
    }

    dependencies {
        implementation("androidx.media3:media3-common:$media3Version")   
        implementation("androidx.media3:media3-transformer:$media3Version")
        implementation("androidx.media3:media3-effect:$media3Version")

        // Dependencies for local unit tests
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
        testImplementation("junit:junit:4.13.2")
        testImplementation("androidx.test.ext:junit-ktx:1.2.1")
        testImplementation("androidx.test:core-ktx:1.6.1")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
            outputs.upToDateWhen {false}
            showStandardStreams = true
            }
        }
    }
}
